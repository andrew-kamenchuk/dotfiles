snippet Vagrantfile "Vagrant File" b
VAGRANTFILE_API_VERSION="${1:2}"

app_name = "${2:`!v expand('%:p:h:t')`}"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	config.vm.box = "ubuntu/xenial64"

	config.vm.synced_folder "./", "${3:/srv/#\{app_name\}}", create: true

	config.vm.network :forwarded_port, guest: ${4:8080}, host: $4

	config.vm.provision :shell, path: "${5:bootstrap.sh}"

	config.vm.provider :virtualbox do |vb|
		vb.name = "${6:ubuntu-xenial64-#\{app_name\}}"
		vb.cpus = 2
		vb.memory = ${7:1024}
	end

end
endsnippet

snippet VagrantNetworkPrivate "config.vm.network private" b
config.vm.network :private_network, ip: "192.168.${1:33.10}"
endsnippet

snippet VagrantProvisionInline "provision :shell, inline: " b
config.vm.provision :shell, inline: <<-SHELL
	$0
SHELL
endsnippet

snippet VagrantSyncedRsync "config.vm.synced_folder type: rsync" b
config.vm.synced_folder "./", "${1:/srv/#\{app_name\}}", type: "rsync",
	rsync__exclude: [".git/", ".vagrant/"${2}],
	rsync__args: ["--archive", "--delete", "--compress"${3}]
	$0
endsnippet

snippet VagrantMachine "Vagrantfile multimachines section" b
config.vm.define "${1:${VISUAL:env}}", primary: true do |$1|
	$0
end
endsnippet

snippet VagrantPushFtp "Vagrantfile push ftp section" b
config.push.define "ftp" do |push|
	push.host = ${1}
	push.username = ${2}
	push.password = ${3}
	push.secure = ${4:true}
	push.exclude = ".git/"
	push.exclude = ".vagrant/"
	push.exclude = "Vagrantfile"
	$0
end
endsnippet

snippet VagrantPushFtpStrategy "Vagrantfile push ftp strategy section" b
config.push.define "${1:${VISUAL:default}}", strategy: "ftp" do |push|
	push.host = ${2}
	push.username = ${3}
	push.password = ${4}
	push.secure = ${5:true}
	push.exclude = ".git/"
	push.exclude = ".vagrant/"
	push.exclude = "Vagrantfile"
	$0
end
endsnippet

snippet VagrantPushExec "Vagrantfile push local-exec section" b
config.push.define "local-exec" do |push|
	push.inline = <<-SCRIPT
		${2}
	SCRIPT
end
endsnippet

snippet VagrantPushExecStrategy "Vagrantfile push local-exec strategy section" b
config.push.define "${1:${VISUAL:default}}", strategy: "local-exec" do |push|
	push.inline = <<-SCRIPT
		${2}
	SCRIPT
end
endsnippet
